<snippet>
	<content><![CDATA[
const int MAXN = 2e5 + 5;
vector<int> st(4 * MAXN);
// pass a, v = 1, tl = 0, tr = n-1 to build the tree
void build(vector<int> &a, int v, int tl, int tr) {
  if (tl == tr) {
    st[v] = a[tl];
    return;
  }
  int tm = (tl + tr) / 2;
  build(a, 2 * v, tl, tm);
  build(a, 2 * v + 1, tm + 1, tr);
  st[v] = min(st[2 * v], st[2 * v + 1]);
}

int mini(int v, int tl, int tr, int l, int r) {
  if (l > r) return INT_MAX;
  if (tl == l && tr == r) return st[v];
  int tm = (tl + tr) / 2;
  int minl = mini(2 * v, tl, tm, l, min(r, tm));
  int minr = mini(2 * v + 1, tm + 1, tr, max(tm + 1, l), r);
  return min(minl, minr);
}

void update(int v, int tl, int tr, int pos, int new_val) {
  if (tl == tr) st[v] = new_val;
  else {
    int tm = (tl + tr) / 2;
    if (pos <= tm) update(2 * v, tl, tm, pos, new_val);
    else update(2 * v + 1, tm + 1, tr, pos, new_val);
    st[v] = min(st[2 * v], st[2 * v + 1]);
  }
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>segtree_min</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
</snippet>
