<snippet>
	<content><![CDATA[
// sum(l, r) gives the sum of elements in the range l and r-1 inclusive (0<=l<r<=n)
struct segment_tree {

	int size;
	vector<int> sums;

	void init(int n) {
		size = 1;
		while (size < n)
			size <<= 1;
		sums.assign(2 * size, 0);
	}

	void set(int i, int v, int x, int lx, int rx) {
		if (rx - lx == 1) {
			sums[x] = v;
			return;
		}
		int m = (lx + rx) / 2;
		if (i < m) {
			set(i, v, 2 * x + 1, lx, m);
		}
		else {
			set(i, v, 2 * x + 2, m, rx);
		}
		sums[x] = sums[2 * x + 1] + sums[2 * x + 2];
	}

	void set(int i, int v) {
		set(i, v, 0, 0, size);
	}

	int sum(int l, int r, int x, int lx, int rx) {
		if (lx >= r || l >= rx)
			return 0;
		if (lx >= l && rx <= r)
			return sums[x];
		int m = (lx + rx) / 2;
		int sum_l = sum(l, r, 2 * x + 1, lx, m);
		int sum_r = sum(l, r, 2 * x + 2, m, rx);
		return sum_l + sum_r;
	}

	int sum(int l, int r) {
		return sum(l, r, 0, 0, size);
	}
};
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>segtree_sums_class</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
</snippet>
